<?xml version="1.0" encoding="utf-8"?>
<Content Key="8fdf15d3-c3c1-44ed-b721-1cde6814fae5" Alias="Site Project Settings" Level="4">
  <Info>
    <Parent Key="da4e63d2-9b5b-4ee1-9581-68f424efa7b1">Configuration</Parent>
    <Path>/Home/Docs/Configuration/SiteProjectSettings</Path>
    <Trashed>false</Trashed>
    <ContentType>webPage</ContentType>
    <CreateDate>2025-01-15T23:57:04</CreateDate>
    <NodeName Default="Site Project Settings" />
    <SortOrder>2</SortOrder>
    <Published Default="true" />
    <Schedule />
    <Template />
  </Info>
  <Properties>
    <expandTableOfContents>
      <Value><![CDATA[1]]></Value>
    </expandTableOfContents>
    <mainContent>
      <Value><![CDATA[{
  "markup": "\u003Ch2\u003EEnvironment variables\u003C/h2\u003E\u003Cp\u003EThe site project uses \u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022https://github.com/motdotla/dotenv\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003Edotenv\u003C/a\u003E to load environment variables from the \u003Ccode\u003E.env\u003C/code\u003E file.\u003C/p\u003E\u003Cp\u003E\u26A0\uFE0F Do \u003Cem\u003Enot\u003C/em\u003E commit the \u003Ccode\u003E.env\u003C/code\u003E file to your code repository!\u003C/p\u003E\u003Ch3\u003ESITE_LANGUAGE\u003C/h3\u003E\u003Cpre\u003E\u003Ccode\u003ESITE_LANGUAGE=en-US\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EThe language of the site. This value will be passed in the \u003Ccode\u003EAccept-Language\u003C/code\u003E HTTP header in requests to the \u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003EDelivery API\u003C/a\u003E. It is also used to set the \u003Ccode\u003Elang\u003C/code\u003E attribute of the \u003Ccode\u003Ehtml\u003C/code\u003E element in the base layout.\u003C/p\u003E\u003Cp\u003E\u26A0\uFE0F Multi-lingual sites are not currently supported.\u003C/p\u003E\u003Ch3\u003EUMBRACO_BASE_URL\u003C/h3\u003E\u003Cpre\u003E\u003Ccode\u003EUMBRACO_BASE_URL=http://localhost:1111/\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EThe base URL of the Umbraco CMS. Used to call the Delivery API and to download media files.\u003C/p\u003E\u003Cp\u003E\u26A0\uFE0F This is a required variable. The build will fail if it is not set.\u003C/p\u003E\u003Ch3\u003EUMBRACO_DELIVERY_API_KEY\u003C/h3\u003E\u003Cpre\u003E\u003Ccode\u003EUMBRACO_DELIVERY_API_KEY=11111111-1111-1111-1111-111111111111\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EThe Umbraco Delivery API key. Passed in the \u003Ccode\u003EApi-Key\u003C/code\u003E header in all requests to the API. Can be left blank if the API is public.\u003C/p\u003E\u003Cp\u003E\u26A0\uFE0F This is set to a randomly generated GUID when the solution is created. This needs to match the Delivery \u003Ccode\u003EApiKey\u003C/code\u003E setting in the \u003Ca target=\u0022\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022/{localLink:01cc8bb3-ba26-4c6f-b235-26807a570b9e}\u0022 title=\u0022CMS project settings.\u0022 type=\u0022document\u0022\u003ECMS\u003C/a\u003E. Feel free to change it, but make sure to store it securely.\u003C/p\u003E\u003Ch3\u003EUMBRACO_DELIVERY_API_TAKE\u003C/h3\u003E\u003Cpre\u003E\u003Ccode\u003EUMBRACO_DELIVERY_API_TAKE=1111\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EThe number of content nodes to retrieve at build time. Passed in the \u003Ccode\u003Etake\u003C/code\u003E parameter in calls to the Delivery API.\u003C/p\u003E\u003Cp\u003E\u26A0\uFE0F This should be greater than the total number of nodes in the CMS. I haven\u0027t tested performance with large node trees.\u003C/p\u003E\u003Ch2\u003EEleventy config\u003C/h2\u003E\u003Cp\u003EEleventy is configured in \u003Ccode\u003Eeleventy.config.js\u003C/code\u003E. See the \u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022https://www.11ty.dev/docs/config/\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003EEleventy configuration docs\u003C/a\u003E for full details about this file and the supported options.\u003C/p\u003E\u003Cp\u003EThe following sections detail the custom configurations and extensions included in the starter kit.\u003C/p\u003E\u003Ch3\u003EDirectories\u003C/h3\u003E\u003Cp\u003EThe Eleventy directory configuration is as follows:\u003C/p\u003E\u003Cpre\u003E\u003Ccode\u003Edir: {\n\tinput: \u0022./content/\u0022,\n\toutput: \u0022./_site/\u0022,\n\tincludes: \u0022../_includes/\u0022,\n\tdata: \u0022../_data/\u0022,\n}\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003E\u003Cstrong\u003Einput\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe \u003Ccode\u003Einput\u003C/code\u003E directory is where Eleventy looks for templates to process.\u003C/p\u003E\u003Cp\u003EAt the moment this directory just contains \u003Ccode\u003EUmbracoPage.11ty.js\u003C/code\u003E, a \u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022https://www.11ty.dev/docs/languages/javascript/\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003EJavaScript template\u003C/a\u003E that automatically renders \u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022https://www.11ty.dev/docs/languages/nunjucks/\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003ENunjucks\u003C/a\u003E templates for Umbraco page nodes.\u003C/p\u003E\u003Cp\u003EYou can put any files that you want to be processed as Eleventy templates here and they will be combined with the content pages from the CMS in the output. Note that the Eleventy build will fail if there are permalink conflicts.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003Eoutput\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe \u003Ccode\u003Eoutput\u003C/code\u003E directory is where Eleventy writes the generated static site files.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003Eincludes\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe \u003Ccode\u003Eincludes\u003C/code\u003E directory is meant for \u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022https://www.11ty.dev/docs/layouts/\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003EEleventy layouts\u003C/a\u003E, include files, extends files, partials or macros. The starter kit also places CSS files in this directory.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003Edata\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe \u003Ccode\u003Edata\u003C/code\u003E directory is where Eleventy\u0027s \u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022https://www.11ty.dev/docs/data-global/\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003Eglobal data files\u003C/a\u003E reside. Global data is available to all templates. In the starter kit we use it to expose environment variables and Umbraco CMS data across templates.\u003C/p\u003E\u003Ch3\u003EPassthrough File Copy\u003C/h3\u003E\u003Cp\u003E\u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022https://www.11ty.dev/docs/copy/\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003EPassthrough File Copy\u003C/a\u003E is used to copy the contents of the \u003Ccode\u003Epublic\u003C/code\u003E directory to the output directory:\u003C/p\u003E\u003Cpre\u003E\u003Ccode\u003EeleventyConfig.addPassthroughCopy({ \u0022./public/\u0022: \u0022/\u0022 });\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EUse this directory for static assets such as fonts that need to be publicly accessible on the front end.\u003C/p\u003E\u003Ch3\u003EPlugins\u003C/h3\u003E\u003Cp\u003E\u003Cstrong\u003EId Attribute\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe \u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022https://www.11ty.dev/docs/plugins/id-attribute/\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003EId Attribute\u003C/a\u003E plugin is used to automatically add \u003Ccode\u003Eid\u003C/code\u003E attributes to heading tags within the HTML output. This allows for deep linking to sections within pages and automatically generating tables of contents. It is used in its default configuration:\u003C/p\u003E\u003Cpre\u003E\u003Ccode\u003EeleventyConfig.addPlugin(IdAttributePlugin);\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003E\u003Cstrong\u003ERender\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe \u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022https://www.11ty.dev/docs/plugins/render/\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003ERender\u003C/a\u003E plugin is added to enable us to programmatically render Nunjucks templates for Umbraco content pages. It is also used in its default configuration:\u003C/p\u003E\u003Cpre\u003E\u003Ccode\u003EeleventyConfig.addPlugin(EleventyRenderPlugin);\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003E\u003Cstrong\u003EImage\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe \u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022https://www.11ty.dev/docs/plugins/image/\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003EImage\u003C/a\u003E optimisation plugin is added with the following options:\u003C/p\u003E\u003Cpre\u003E\u003Ccode\u003EeleventyConfig.addPlugin(eleventyImageTransformPlugin, {\n\tformats: [\u0022webp\u0022, \u0022jpeg\u0022, \u0022svg\u0022],\n\tsvgShortCircuit: true,\n\thtmlOptions: {\n\t\timgAttributes: {\n\t\t\tloading: \u0022lazy\u0022,\n\t\t\tdecoding: \u0022async\u0022,\n\t\t},\n\t},\n\tsharpOptions: {\n\t\tanimated: true,\n\t},\n\turlPath: \u0022/images/\u0022,\n});\u003C/code\u003E\u003C/pre\u003E\u003Ch3\u003EFilters\u003C/h3\u003E\u003Cp\u003EA small number of custom \u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022https://www.11ty.dev/docs/filters/\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003Efilters\u003C/a\u003E are included in the \u003Ccode\u003Efilters\u003C/code\u003E directory.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EsubpageNavigation\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe \u003Ccode\u003EsubpageNavigation\u003C/code\u003E filter is used in the generation of the subpage navigation menu in the \u003Ccode\u003EwebPage\u003C/code\u003E template. It returns an array of child pages, which themselves can contain children, for a given node ID and depth. This array is then used to render a nested list of links.\u003C/p\u003E\u003Cpre\u003E\u003Ccode\u003EeleventyConfig.addFilter(\u0022subpageNavigation\u0022, subpageNavigation);\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003E\u003Cstrong\u003ErichText\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe \u003Ccode\u003ErichText\u003C/code\u003E filter accepts some HTML, scans it for relative URLs starting with \u003Ccode\u003E/media/\u003C/code\u003E and prepends them with the \u003Ccode\u003EUMBRACO_BASE_URL\u003C/code\u003E. This is so the Image plugin HTML transform will download and cache Umbraco media images embedded in rich text editors.\u003C/p\u003E\u003Cpre\u003E\u003Ccode\u003EeleventyConfig.addFilter(\u0022richText\u0022, richText);\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EIt uses \u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022https://github.com/11ty/eleventy-posthtml-urls/\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003E@11ty/posthtml-urls\u003C/a\u003E under the hood.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003Esanitize\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe \u003Ccode\u003Esanitize\u003C/code\u003E filter uses \u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022https://github.com/cure53/DOMPurify\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003EDOMPurify\u003C/a\u003E to sanitise HTML markup and protect against XSS attacks. Rich text markup coming from the CMS is piped through this filter, just in case some malicious code has found its way in there.\u003C/p\u003E\u003Cpre\u003E\u003Ccode\u003EeleventyConfig.addFilter(\u0022sanitize\u0022, sanitize);\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EIf you are experiencing issues with certain HTML tags or attributes being stripped out, you can update the DOMPurify configuration in \u003Ccode\u003Efilters/sanitize.js\u003C/code\u003E.\u003C/p\u003E\u003Ch3\u003ETransforms\u003C/h3\u003E\u003Cp\u003EA small number of custom \u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022https://www.11ty.dev/docs/transforms/\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003Etransforms\u003C/a\u003E are included in the \u003Ccode\u003Etransforms\u003C/code\u003E directory.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EtableOfContents\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe \u003Ccode\u003EtableOfContents\u003C/code\u003E transform automatically generates a table of contents for a web page based on \u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003Eheading element\u003C/a\u003E IDs in the HTML.\u003C/p\u003E\u003Cpre\u003E\u003Ccode\u003EeleventyConfig.addTransform(\u0022tableOfContents\u0022, tableOfContents);\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EIt uses \u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022https://posthtml.org/\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003Eposthtml\u003C/a\u003E to parse the headings and \u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022https://github.com/posthtml/posthtml-insert-at\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003Eposthtml-insert-at\u003C/a\u003E to inject the contents into the page.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EhtmlMinifier\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe \u003Ccode\u003EhtmlMinifier\u003C/code\u003E transform minifies HTML and CSS in HTML output files.\u003C/p\u003E\u003Cpre\u003E\u003Ccode\u003EeleventyConfig.addTransform(\u0022htmlMinifier\u0022, htmlMinifier);\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EIt uses \u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022https://github.com/terser/html-minifier-terser\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003Ehtml-minifier-terser\u003C/a\u003E and is configured in \u003Ccode\u003Etransforms/htmlMinifier.js\u003C/code\u003E:\u003C/p\u003E\u003Cpre\u003E\u003Ccode\u003E{\n\tcollapseBooleanAttributes: true,\n\tcollapseWhitespace: true,\n\tminifyCSS: true,\n\tremoveAttributeQuotes: true,\n\tremoveOptionalTags: true,\n\tremoveRedundantAttributes: true,\n\tsortAttributes: true,\n\tsortClassName: true,\n}\u003C/code\u003E\u003C/pre\u003E\u003Ch3\u003EWatch targets\u003C/h3\u003E\u003Cp\u003EThe uSync directory in the CMS project is added as a \u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 data-anchor=\u0022#add-your-own-watch-targets\u0022 href=\u0022https://www.11ty.dev/docs/watch-serve/#add-your-own-watch-targets\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003Ewatch target\u003C/a\u003E so that any time Umbraco content is published (or content types/data types/etc. are modified), the dev site will be rebuilt/refreshed automatically:\u003C/p\u003E\u003Cpre\u003E\u003Ccode\u003EeleventyConfig.addWatchTarget(\u0022../Thingy.Cms/uSync/\u0022);\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EWe also wait a short time before triggering a new site build to give Umbraco a chance to index any published content:\u003C/p\u003E\u003Cpre\u003E\u003Ccode\u003EeleventyConfig.setWatchThrottleWaitTime(500);\u003C/code\u003E\u003C/pre\u003E\u003Ch2\u003ECSS\u003C/h2\u003E\u003Cp\u003EThe starter kit uses a vanilla CSS approach based on the \u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022https://cube.fyi/\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003ECUBE CSS\u003C/a\u003E methodology. CSS files are located in the \u003Ccode\u003E_includes/css/\u003C/code\u003E directory.\u003C/p\u003E\u003Cp\u003ESome sensible global styles and variables have been defined (inspired by Andy Bell\u0027s \u003Cem\u003Eexcellent\u003C/em\u003E \u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022https://piccalil.li/complete-css/\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003EComplete CSS\u003C/a\u003E course), as well as some layout compositions from \u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022https://every-layout.dev/\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003EEvery Layout\u003C/a\u003E.\u003C/p\u003E\u003Cp\u003EHowever, in no way is this a complete CSS framework. It is meant as a basic starting point and something that can be built upon or easily ripped out and replaced with your favourite tools/frameworks.\u003C/p\u003E\u003Ch3\u003EVariables\u003C/h3\u003E\u003Cp\u003EThings like colours, fonts, borders, widths, and spacing are configured in CSS variables in these files:\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E\u003Ccode\u003Eglobal/scale.css\u003C/code\u003E: \u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022https://utopia.fyi/\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003EUtopia\u003C/a\u003E fluid type and space scales.\u003C/p\u003E\u003C/li\u003E\u003Cli\u003E\u003Cp\u003E\u003Ccode\u003Eglobal/variables.css\u003C/code\u003E: colours, borders, fonts, gutters/wrappers, etc.\u003C/p\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003EChanging the variables in these files should have a cascading effect across the entire site, helping to keep styling consistent.\u003C/p\u003E\u003Ch3\u003EBundling\u003C/h3\u003E\u003Cp\u003ECSS bundling is handled by the Eleventy \u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022https://www.11ty.dev/docs/plugins/bundle/\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003EBundle\u003C/a\u003E plugin. A single CSS bundle is defined named \u003Ccode\u003Ecss\u003C/code\u003E:\u003C/p\u003E\u003Cpre\u003E\u003Ccode\u003EeleventyConfig.addBundle(\u0022css\u0022);\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EIf you want to add a new CSS file to the bundle you will need to include it in \u003Ccode\u003E_includes/css/style.njk\u003C/code\u003E, or use the \u003Ccode\u003Ecss\u003C/code\u003E shortcode in templates or partials (allowing for per-page bundles).\u003C/p\u003E\u003Cp\u003E\u26A0\uFE0F This bundle is inlined in a \u003Ccode\u003E\u0026lt;style\u0026gt;\u003C/code\u003E tag in the site head so should only be used for \u003Cem\u003Ecritical\u003C/em\u003E CSS styles. If you want some CSS to be deferred, use \u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 data-anchor=\u0022#asset-bucketing\u0022 href=\u0022https://www.11ty.dev/docs/plugins/bundle/#asset-bucketing\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003Easset bucketing\u003C/a\u003E.\u003C/p\u003E\u003Ch3\u003EMinification\u003C/h3\u003E\u003Cp\u003ENote that the Bundle plugin does not do any minification. The \u003Cem\u003Einline\u003C/em\u003E CSS is minified by the \u003Ccode\u003EhtmlMinifier\u003C/code\u003E transform mentioned before. It uses \u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022https://github.com/clean-css/clean-css\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003Eclean-css\u003C/a\u003E under the hood with default options.\u003C/p\u003E",
  "blocks": {
    "contentData": [],
    "settingsData": [],
    "expose": [],
    "Layout": {}
  }
}]]></Value>
    </mainContent>
    <mainHeading>
      <Value><![CDATA[]]></Value>
    </mainHeading>
    <metaDescription>
      <Value><![CDATA[Configuration of the fr1end1y Node.js/Eleventy project.]]></Value>
    </metaDescription>
    <metaTitle>
      <Value><![CDATA[]]></Value>
    </metaTitle>
    <showSubpageNavigation>
      <Value><![CDATA[]]></Value>
    </showSubpageNavigation>
    <showTableOfContents>
      <Value><![CDATA[1]]></Value>
    </showTableOfContents>
    <subpageNavigationDepth>
      <Value><![CDATA[]]></Value>
    </subpageNavigationDepth>
  </Properties>
</Content>