<?xml version="1.0" encoding="utf-8"?>
<Content Key="320d4497-f90b-4cc0-9400-2820905b8e4d" Alias="Scripts" Level="3">
  <Info>
    <Parent Key="d29d636c-591d-435c-9de7-7f9188276d1e">Docs</Parent>
    <Path>/Home/Docs/Scripts</Path>
    <Trashed>false</Trashed>
    <ContentType>webPage</ContentType>
    <CreateDate>2024-12-23T00:52:46</CreateDate>
    <NodeName Default="Scripts" />
    <SortOrder>3</SortOrder>
    <Published Default="true" />
    <Schedule />
    <Template />
  </Info>
  <Properties>
    <expandTableOfContents>
      <Value><![CDATA[1]]></Value>
    </expandTableOfContents>
    <mainContent>
      <Value><![CDATA[{
  "markup": "\u003Cp\u003EThe following \u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022https://docs.npmjs.com/cli/v8/using-npm/scripts\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003Enpm scripts\u003C/a\u003E are provided to simplify working with the starter kit from the command line.\u003C/p\u003E\u003Cp\u003EThese should be executed from the solution root directory. The scripts themselves can be found in the \u003Ccode\u003Epackage.json\u003C/code\u003E file in this directory.\u003C/p\u003E\u003Ch2\u003Enpm run build-cms\u003C/h2\u003E\u003Cpre\u003E\u003Ccode\u003Enpm run build-cms\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EBuilds the CMS project using \u003Ccode\u003Edotnet build\u003C/code\u003E.\u003C/p\u003E\u003Ch2\u003Enpm run build-site\u003C/h2\u003E\u003Cpre\u003E\u003Ccode\u003Enpm run build-site\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EBuilds the Eleventy static site. This is a standard Eleventy build using \u003Ccode\u003Enpx @11ty/eleventy\u003C/code\u003E which is a \u003Cstrong\u003Eproduction-ready build by default\u003C/strong\u003E.\u003C/p\u003E\u003Cp\u003E\u26A0\uFE0F The site build currently fails if the Umbraco Delivery API cannot be contacted or does not return any content. See the \u003Ca target=\u0022\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022/{localLink:5bea39c2-0222-4b55-a238-fc9efed46901}\u0022 title=\u0022\u0022 type=\u0022document\u0022\u003Etroubleshooting\u003C/a\u003E page if you are experiencing errors.\u003C/p\u003E\u003Ch2\u003Enpm run clean-cms\u003C/h2\u003E\u003Cpre\u003E\u003Ccode\u003Enpm run clean-cms\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EPerforms a \u003Ccode\u003Edotnet clean\u003C/code\u003E in the CMS project directory.\u003C/p\u003E\u003Ch2\u003Enpm run clean-site\u003C/h2\u003E\u003Cpre\u003E\u003Ccode\u003Enpm run clean-site\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EDeletes the Eleventy output and cache directories (\u003Ccode\u003ESite/_site/\u003C/code\u003E and \u003Ccode\u003ESite/.cache/\u003C/code\u003E).\u003C/p\u003E\u003Ch2\u003Enpm run clean\u003C/h2\u003E\u003Cpre\u003E\u003Ccode\u003Enpm run clean\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003ERuns \u003Ccode\u003Eclean-cms\u003C/code\u003E and \u003Ccode\u003Eclean-site\u003C/code\u003E sequentially.\u003C/p\u003E\u003Ch2\u003Enpm run dev-cms\u003C/h2\u003E\u003Cpre\u003E\u003Ccode\u003Enpm run dev-cms\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003ELaunches the ASP.NET development server (\u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022https://learn.microsoft.com/en-us/aspnet/core/fundamentals/servers/?view=aspnetcore-9.0\u0026amp;tabs=linux#kestrel\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003EKestrel\u003C/a\u003E by default) from the CMS project directory.\u003C/p\u003E\u003Ch2\u003Enpm run dev-site\u003C/h2\u003E\u003Cpre\u003E\u003Ccode\u003Enpm run dev-site\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003ELaunches the \u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022https://www.11ty.dev/docs/dev-server/\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003EEleventy Dev Server\u003C/a\u003E from the site project directory. Uses the \u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022https://www.npmjs.com/package/wait-on\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003Ewait-on\u003C/a\u003E package to ensure that the CMS is listening before running Eleventy.\u003C/p\u003E\u003Ch2\u003Enpm run dev\u003C/h2\u003E\u003Cpre\u003E\u003Ccode\u003Enpm run dev\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003EUses \u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022https://www.npmjs.com/package/concurrently\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003Econcurrently\u003C/a\u003E to run the \u003Ccode\u003Edev-cms\u003C/code\u003E and \u003Ccode\u003Edev-site\u003C/code\u003E commands, well, concurrently...\u003C/p\u003E\u003Ch2\u003Enpm run openapi-gen\u003C/h2\u003E\u003Cpre\u003E\u003Ccode\u003Enpm run openapi-gen\u003C/code\u003E\u003C/pre\u003E\u003Cp\u003ERegenerates the Delivery API client using \u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022https://github.com/hey-api/openapi-ts\u0022 title=\u0022\u0022 type=\u0022external\u0022\u003E@hey-api/openapi-ts\u003C/a\u003E. This should only need done when the Umbraco Delivery API definition changes and you want to take advantages of new features.\u003C/p\u003E\u003Cp\u003EIt uses the \u003Ccode\u003EUMBRACO_BASE_URL\u003C/code\u003E \u003Ca target=\u0022\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022/{localLink:8fdf15d3-c3c1-44ed-b721-1cde6814fae5}\u0022 title=\u0022\u0022 type=\u0022document\u0022\u003Eenvironment variable\u003C/a\u003E to locate the Delivery API (so the CMS must be running). This is configured in \u003Ccode\u003ESite/openapi-ts.config\u003C/code\u003E.\u003C/p\u003E\u003Cp\u003E\u26A0\uFE0F This generates TypeScript files in \u003Ccode\u003ESite/api/delivery/\u003C/code\u003E which are then compiled to JavaScript. The TypeScript files are ignored by default in the \u003Ccode\u003ESite/.gitignore\u003C/code\u003E file. This is the only thing TypeScript is used for in the project and is configured in \u003Ccode\u003ESite/tsconfig.json\u003C/code\u003E.\u003C/p\u003E",
  "blocks": {
    "contentData": [],
    "settingsData": [],
    "expose": [],
    "Layout": {}
  }
}]]></Value>
    </mainContent>
    <mainHeading>
      <Value><![CDATA[]]></Value>
    </mainHeading>
    <metaDescription>
      <Value><![CDATA[npm scripts to simplify working with the fr1end1y starter kit.]]></Value>
    </metaDescription>
    <metaTitle>
      <Value><![CDATA[]]></Value>
    </metaTitle>
    <showSubpageNavigation>
      <Value><![CDATA[]]></Value>
    </showSubpageNavigation>
    <showTableOfContents>
      <Value><![CDATA[1]]></Value>
    </showTableOfContents>
    <subpageNavigationDepth>
      <Value><![CDATA[]]></Value>
    </subpageNavigationDepth>
  </Properties>
</Content>